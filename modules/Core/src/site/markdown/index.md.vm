#*
 * *************************************************************************************************************************************************************
 *
 * SteelBlue: DCI User Interfaces
 * http://tidalwave.it/projects/steelblue
 *
 * Copyright (C) 2015 - 2024 by Tidalwave s.a.s. (http://tidalwave.it)
 *
 * *************************************************************************************************************************************************************
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.
 *
 * *************************************************************************************************************************************************************
 *
 * git clone https://bitbucket.org/tidalwave/steelblue-src
 * git clone https://github.com/tidalwave-it/steelblue-src
 *
 * *************************************************************************************************************************************************************
 *#

#[[##]]# Introduction

${project.description}

[Javadoc](apidocs/index.html)


#[[##]]# Table of contents

<!-- MACRO{toc|section=0|fromDepth=1|toDepth=4} -->



#[[###]]# Roles

TBD


#[[####]]# Displayable, LocalizedDisplayable

![UML](apidocs/it/tidalwave/ui/core/role/Displayable.svg)
![UML](apidocs/it/tidalwave/ui/core/role/LocalizedDisplayable.svg)

This role models something that can be displayed as a text.


#[[####]]# MutableDisplayable, MutableLocalizedDisplayable

![UML](apidocs/it/tidalwave/ui/core/role/MutableDisplayable.svg)
![UML](apidocs/it/tidalwave/ui/core/role/MutableLocalizedDisplayable.svg)

This is mutable a variant of `Displayable`, that is the related property can be changed and change listeners are supported.


#[[####]]# StringRenderable

![UML](apidocs/it/tidalwave/ui/core/role/StringRenderable.svg)

This roles models something that can be rendered to a string. The concept is very similar to the one of `Displayable`, only the exposed API is different.


#[[####]]# PlainTextRenderable

![UML](apidocs/it/tidalwave/ui/core/role/PlainTextRenderable.svg)

This specialisation of `StringRenderable` makes it clear that the rendered string is a plain text.


#[[####]]# HtmlRenderable

![UML](apidocs/it/tidalwave/ui/core/role/HtmlRenderable.svg)

This specialisation of `StringRenderable` makes it clear that the rendered string is a HTML text.





#[[####]]# Changeable

![UML](apidocs/it/tidalwave/ui/core/role/Changeable.svg)

This role models something that can be changed.


#[[####]]# IconProvider, MutableIconProvider

![UML](apidocs/it/tidalwave/ui/core/role/IconProvider.svg)
![UML](apidocs/it/tidalwave/ui/core/role/MutableIconProvider.svg)

These roles model something that can have an icon. The mutable version supports change listeners.



#[[####]]# UserAction

![UML](apidocs/it/tidalwave/ui/core/role/UserAction.svg)

This role represents a callback that can be attached to a UI component that can be activated with a mouse click, such as a button or a menu itme.
It can have in turn further roles (typically at least a `Displayable` and an `IconProvider`) and an enabled/disabled property.


#[[####]]# UserActionProvider

![UML](apidocs/it/tidalwave/ui/core/role/UserActionProvider.svg)

This role is a factory of `UserAction`s.


#[[####]]# Selectable

![UML](apidocs/it/tidalwave/ui/core/role/Selectable.svg)

This role represents a callback that can be attached to a UI component that contains a list of items that can be selected.


#[[####]]# Styleable

![UML](apidocs/it/tidalwave/ui/core/role/Styleable.svg)

This role represents something that can have a style attached to it, for controlling some aspect of rendering; for instance, a lefT/right/center text
justification, or a font style such as bold or italic.


#[[####]]# Visibility

![UML](apidocs/it/tidalwave/ui/core/role/Visibility.svg)

This role represents something that can be made visible or invisible.


#[[###]]# PresentationModel

The `PresentationModel` is a specific role that works as an adapter between the model classes and a UI. It is basically a bag of roles, partly coming from
the adapter object, and partly added in second moment.


#[[####]]# PresentationModel

![UML](apidocs/it/tidalwave/ui/core/role/PresentationModel.svg)
TBD


#[[####]]# PresentationModelAggregate

This role is an aggregate of `PresentationModel`s associated to a name. It is suitable for modelling data that must be rendered on a table or a treeview.


![UML](apidocs/it/tidalwave/ui/core/role/PresentationModelAggregate.svg)
TBD


#[[####]]# PresentationModelFactory

![UML](apidocs/it/tidalwave/ui/core/role/PresentationModelFactory.svg)
TBD


